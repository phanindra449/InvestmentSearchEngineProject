// <auto-generated />
using Kanini.InvestmentSearchEngine.FinstarRating.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kanini.InvestmentSearchEngine.FinstarRating.Migrations
{
    [DbContext(typeof(FinstarContext))]
    [Migration("20230825173249_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.Efficiency", b =>
                {
                    b.Property<int>("EfficiencyId")
                        .HasColumnType("int");

                    b.Property<double>("EfficiencyRate")
                        .HasColumnType("float");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.HasKey("EfficiencyId");

                    b.ToTable("Efficiency");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.Financial", b =>
                {
                    b.Property<int>("FinancialID")
                        .HasColumnType("int");

                    b.Property<double>("FinancialRate")
                        .HasColumnType("float");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.HasKey("FinancialID");

                    b.ToTable("Financial");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.Finstar", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<double>("TotalRating")
                        .HasColumnType("float");

                    b.Property<int>("TotalReviewCount")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.ToTable("Finstar");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.OwnerShip", b =>
                {
                    b.Property<int>("OwnerShipID")
                        .HasColumnType("int");

                    b.Property<double>("OwnerShipRate")
                        .HasColumnType("float");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.HasKey("OwnerShipID");

                    b.ToTable("OwnerShip");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.Valuation", b =>
                {
                    b.Property<int>("ValuationID")
                        .HasColumnType("int");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.Property<double>("ValuationRate")
                        .HasColumnType("float");

                    b.HasKey("ValuationID");

                    b.ToTable("Valuation");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.Efficiency", b =>
                {
                    b.HasOne("Kanini.InvestmentSearchEngine.FinstarRating.Models.Finstar", "Finstar")
                        .WithOne("Efficiency")
                        .HasForeignKey("Kanini.InvestmentSearchEngine.FinstarRating.Models.Efficiency", "EfficiencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finstar");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.Financial", b =>
                {
                    b.HasOne("Kanini.InvestmentSearchEngine.FinstarRating.Models.Finstar", "Finstar")
                        .WithOne("Financial")
                        .HasForeignKey("Kanini.InvestmentSearchEngine.FinstarRating.Models.Financial", "FinancialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finstar");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.OwnerShip", b =>
                {
                    b.HasOne("Kanini.InvestmentSearchEngine.FinstarRating.Models.Finstar", "Finstar")
                        .WithOne("OwnerShip")
                        .HasForeignKey("Kanini.InvestmentSearchEngine.FinstarRating.Models.OwnerShip", "OwnerShipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finstar");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.Valuation", b =>
                {
                    b.HasOne("Kanini.InvestmentSearchEngine.FinstarRating.Models.Finstar", "Finstar")
                        .WithOne("Valuation")
                        .HasForeignKey("Kanini.InvestmentSearchEngine.FinstarRating.Models.Valuation", "ValuationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finstar");
                });

            modelBuilder.Entity("Kanini.InvestmentSearchEngine.FinstarRating.Models.Finstar", b =>
                {
                    b.Navigation("Efficiency");

                    b.Navigation("Financial");

                    b.Navigation("OwnerShip");

                    b.Navigation("Valuation");
                });
#pragma warning restore 612, 618
        }
    }
}
